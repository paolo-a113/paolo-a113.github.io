<!DOCTYPE html>
<html data-wf-domain="paolos-fabulous-project-e74cab96af4b9fc.webflow.io" data-wf-page="5cfd93a271000a535c533f97" data-wf-site="5cfd93a271000a4eb8533f96" data-wf-status="1" class="w-mod-js w-mod-ix wf-lato-n1-active wf-lato-i1-active wf-lato-n3-active wf-lato-i3-active wf-lato-n4-active wf-lato-i4-active wf-lato-n7-active wf-lato-i7-active wf-lato-n9-active wf-lato-i9-active wf-ptserif-n4-active wf-ptserif-i4-active wf-ptserif-n7-active wf-ptserif-i7-active wf-inconsolata-n4-active wf-inconsolata-n7-active wf-oswald-n2-active wf-oswald-n3-active wf-oswald-n4-active wf-oswald-n5-active wf-oswald-n6-active wf-oswald-n7-active wf-robotomono-n4-active wf-roboto-n4-active wf-active">

<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <title>Project Page | Paolo Arguelles</title>
    <meta content="width=device-width, initial-scale=1" name="viewport">
    <meta content="Webflow" name="generator">
    <link href="./website/style.css" rel="stylesheet" type="text/css">
    <link rel="stylesheet" href="./website/fonts.css" media="all">

    <style>
       /* Style the header with a grey background and some padding */
    .header {
      overflow: hidden;
      background-color: #f1f1f1;
      padding: 20px 50px;
    }

    /* Style the header links */
    .header a {
      float: left;
      color: black;
      text-align: center;
      padding: 12px;
      text-decoration: none;
      line-height: 25px;
      border-radius: 4px;
      transition: color 200ms;
    }

    .header a:hover {
      color: #DE5021;
    }

    /* Float the link section to the right */
    .header-right {
      float: right;
      font-size: 12px;
    }

    .myHeader {
      float: left;
      font-family: 'Palatino Linotype', 'Book Antiqua', Palatino, serif;
      font-size: 30px;
      color: #000;
    }

    .myPages {
      float: left;
      font-family: 'Futura';
      color: #000;
      font-size: 20px;
    }

    .div-block-15-copy {
    	height: 600px;
    	margin-top: 0px;
    	padding-top: 0px;
    	background-image: url("./website/resources/pics/waffle_bg.jpg");
    	background-position: 50% 100%;
    	background-size: cover;
    	background-attachment: fixed;
    	line-height: 30px;
    }

    /* Add media queries for responsiveness - when the screen is 500px wide or less, stack the links on top of each other */
    @media screen and (max-width: 500px) {
      .header a {
        float: none;
        display: block;
        text-align: left;
      }
      .header-right {
        float: none;
      }
    }
    </style>
</head>

<body class="body-2">
  <div class="header">
  <a href="./index.htm" class="myHeader">Paolo Arguelles</a>
  <div class="header-right">
    <a class=myPages href="./projects.htm">PROJECTS</a>
    <a class=myPages href="./bio.htm">BIOGRAPHY</a>
    <a class=myPages href="#about">SPEECH</a>
    <a class=myPages href="./website/resources/PaoloArguelles_Resume.pdf">RESUME</a>
  </div>
  </div>
    <div class="div-block-15-copy">
    </div>
    <div class="project_box">
      <div class="project_contain">
        <div class="project_topic">
          ROBOTICS
        </div>
        <div class="project_title">
          WaffleBot: A Shape-Shifting, Soft Robotic Matrix Platform for Multi-Agent Control        </div>
        <div class="project_description">
          A bio-inspired, decentralized shape-shifting robot created at Cornell's Collective Embodied Intelligence Lab        </div>
        <div class="project_body">
          <h1 class="project_body_header">
            Test
          </h1>
        constructed entirely of commercial-off-the-shelf components, save for the spherical air bearings, reaction wheels, and valves.

        Simulink was used on the
        provide a graphical user interface to control the testbed.



        Original designs called for the

        became clear to me that the Arduino.

        Firstly,

        While previous iterations called for an Arduino Due

        multithreading, enabling multiple processes to run concurrently.
        increased clock speed.

        the Raspberry Pi

        controlled via secure shell (SSH) or virtual network computing (VNC) from any computer logged on to the Cornell University network.

        After the execution of each command, the receive serial buffer is flushed to prevent congestion and ensure that the most recent command sent by the controller is executed.


        Each COM device had to be configured in the Raspbian kernel to always be identified with a constant name. Randomly assigned names (e.g., /dev/tty0) would be automatically generated by the Raspberry Pi depending on which Arduino was recognized first.

        Each motor driver has an onboard microcontroller to configure

        </div>
      </div>

      </div>
  </div>

    <div class="section-8">
        <div class="text-block-6">Â© 2019 - 2023 by Paolo Arguelles.
            <br>All rights reserved.</div>
    </div>
    <script src="./website/projects_files/jquery-3.3.1.min.js" type="text/javascript" integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=" crossorigin="anonymous"></script>
    <script src="./website/projects_files/webflow.147763e2a.js" type="text/javascript"></script>
    <!--[if lte IE 9]><script src="//cdnjs.cloudflare.com/ajax/libs/placeholders/3.0.2/placeholders.min.js"></script><![endif]-->

</body>

</html>
