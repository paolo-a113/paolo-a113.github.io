<!DOCTYPE html>

<!-- ==================================================================
This site was built and developed by Paolo Arguelles and hosted with GitHub Pages.
pa394@cornell.edu
================================================================== -->


<html data-wf-domain="paolos-fabulous-project-e74cab96af4b9fc.webflow.io" data-wf-page="5cfd93a271000a535c533f97" data-wf-site="5cfd93a271000a4eb8533f96" data-wf-status="1" class="w-mod-js w-mod-ix wf-lato-n1-active wf-lato-i1-active wf-lato-n3-active wf-lato-i3-active wf-lato-n4-active wf-lato-i4-active wf-lato-n7-active wf-lato-i7-active wf-lato-n9-active wf-lato-i9-active wf-ptserif-n4-active wf-ptserif-i4-active wf-ptserif-n7-active wf-ptserif-i7-active wf-inconsolata-n4-active wf-inconsolata-n7-active wf-oswald-n2-active wf-oswald-n3-active wf-oswald-n4-active wf-oswald-n5-active wf-oswald-n6-active wf-oswald-n7-active wf-robotomono-n4-active wf-roboto-n4-active wf-active">

<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <title>Inflatable Interface | Paolo Arguelles</title>
    <meta content="width=device-width, initial-scale=1" name="viewport">
    <link href="./website/style.css" rel="stylesheet" type="text/css">
    <link rel="stylesheet" href="./website/fonts.css" media="all">
    <script src='https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/latest.js?config=TeX-MML-AM_CHTML' async></script>
    <script type="text/x-mathjax-config"> MathJax.Hub.Config({ TeX: { equationNumbers: {autoNumber: "AMS"} } }); </script>
    <style>
        /* Style the header with a grey background and some padding */
        
        .project_image {
            background-image: url("./website/resources/pics/waffle_bg.jpg");
            position: 50% 100%
        }
        
        .active,
        .collapsible:hover {
            transition: 200ms;
            color: #DE5021;
        }
        
        .collapsible:after {
            content: '+';
            font-weight: bold;
            float: right;
            margin-left: 5px;
            color: inherit;
        }
        
        .active:after {
            content: "−";
            color: #DE5021;
        }
        
        .content {
            padding: 0 18px;
            max-height: 0;
            overflow: hidden;
            transition: max-height 300ms;
            background-color: #f1f1f1;
        }
    </style>
</head>

<body class="body">
    <div class="header"> <a href="./index.htm" class="myHeader">Paolo Arguelles</a>
        <div class="header-right"> <a class=myPages href="./projects.htm">Projects</a>
            <a class=myPages href="./bio.htm">About Me</a>
            <a class=myPages href="./speech.htm">Speech</a>
            <a class=myPages href="./PaoloArguelles_Resume.pdf">Resume</a>
        </div>
        <div id="myNav" class="overlay">
            <div class="Absolute-Center">
                <div class="myPages"> <a class=myPages href="./projects.htm">PROJECTS</a>
                    <a class=myPages href="./bio.htm">ABOUT ME</a>
                    <a class=myPages href="./speech.htm">SPEECH</a>
                    <a class=myPages href="./PaoloArguelles_Resume.pdf">RESUME</a>
                </div>
            </div>
        </div>
        <div id="toggle" class="container" style="cursor:pointer" onclick="openNav()">
            <div class="bar1"></div>
            <div class="bar2"></div>
            <div class="bar3"></div>
        </div>
        <script>
            function myFunction(x) {
                x.classList.toggle("change");
            }
        </script>
        <script>
            function openNav() {
                myFunction(document.getElementById("toggle"));
                document.getElementById("myNav").style.height = "100%";
                document.getElementById("toggle").onclick = closeNav;
            }

            function closeNav() {
                myFunction(document.getElementById("toggle"));
                document.getElementById("myNav").style.height = "0%";
                document.getElementById("toggle").onclick = openNav;

            }
        </script>
    </div>
    <div class="project_image"></div>
    <div class="sidenav"> <a href="./projects.htm" text-align: "center"> ‹ Back to Projects </a>
        <br>Project Name
        <d>Mobile and Inflatable Interface for Human-Robot Interaction</d>
        <br>Advisor
        <d>Professor Kirstin Petersen</d>
        <br>Contributing Authors
        <d>Paolo Arguelles, Jonathan Jaramillo, Labhansh Atriwal, Emilie Baker, Connor Hahn, Yunshan Liu, and Ta Wei Yeh</d>
        <br>Affiliations
        <br> <a href="https://cei.ece.cornell.edu/">Collective Embodied Intelligence Lab, Cornell University
            <br></a>
        <br>Documentation <a href="19-1511_01_MS.pdf">IEEE Paper
            Preprint</a>
        <a href="ECE_Poster_2019_Final (1).pdf">Research Poster</a>
        <br>Acknowledgements
        <d>This material is based upon work supported by Gettylabs and the National Science Foundation under Grant No. 1830471</d>

    </div>
    <div class="project_box">
        <div class="project_contain">
            <div class="project_topic">ROBOTICS</div>
            <div class="project_title">Mobile and Inflatable Interface for Human-Robot Interaction
            </div>
            <div class="project_description">An autonomous rover with potential applications in crowd control during disaster scenarios, featuring a novel life-sized inflatable bladder touch interface</div>
            <video preload="yes" autoplay muted loop playsinline width=75% class="center" style="border-radius: 0.5rem;">
                <source src="./website/resources/vids/rover.webm" type="video/webm">
              </video>
            <figcaption class="caption"><br>Courtesy of Collective Embodied Intelligence Laboratory, Cornell University</figcaption>

            <!-- <hr> -->

            <div class="project_body">
                <!-- <h1 class="project_body_header">Abstract</h1> -->
                Researchers hypothesize that networked physical robots may efficiently and safely manage large crowds in scenarios ranging from festivals and conventions to building evacuation. These scenarios pose a unique combination of hardware constraints involving
                safety for human contact, durability to withstand physical interaction, agility to keep up with moving crowds in non-trivial terrains, versatility to adapt to the situation and audience, and low cost to permit mass deployment.

                <br><br>

                <video preload="yes" autoplay muted loop playsinline width=75% class="center" style="border-radius: 0.5rem;">
                    <source src="./website/resources/vids/rover2.webm" type="video/webm">
                  </video>
                <figcaption class="caption"><br>Courtesy of Collective Embodied Intelligence Laboratory, Cornell University</figcaption>
                The inflatable interface allows the robot to maneuver discretely or in confined spaces when deflated, yet grow to encourage interaction. It combines an internal projector, a camera, and speakers, to emit and receive user information. Low weight further
                permits easy handling and transport. The entire robot costs less than $1.5K, and can serve as a general purpose test platform for a range of future human-robot interaction research.

                <hr>
                <div class="footer">
                    <center>© 2019 - 2023 by Paolo Arguelles.
                        <br>All rights reserved.
                </div>
                <script>
                    var coll = document.getElementsByClassName("collapsible");
                    var i;

                    for (i = 0; i < coll.length; i++) {
                        coll[i].addEventListener("click", function() {
                            this.classList.toggle("active");
                            var content = this.nextElementSibling;
                            if (content.style.maxHeight) {
                                content.style.maxHeight = null;
                            } else {
                                content.style.maxHeight = content.scrollHeight + "px";
                            }
                        });
                    }
                </script>
            </div>
        </div>
    </div>
    </div>

</body>

</html>